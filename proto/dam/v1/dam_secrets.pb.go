// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/dam/v1/dam_secrets.proto

// Package dam provides protocol buffer versions of the DAM API, allowing
// end points to receive requests and returns responses using these messages.

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DamSecrets struct {
	Version              string                          `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Revision             int64                           `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	CommitTime           float64                         `protobuf:"fixed64,3,opt,name=commit_time,json=commitTime,proto3" json:"commit_time,omitempty"`
	ClientSecrets        map[string]string               `protobuf:"bytes,4,rep,name=client_secrets,json=clientSecrets,proto3" json:"client_secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BrokerSecrets        map[string]string               `protobuf:"bytes,7,rep,name=broker_secrets,json=brokerSecrets,proto3" json:"broker_secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PublicTokenKeys      map[string]string               `protobuf:"bytes,5,rep,name=public_token_keys,json=publicTokenKeys,proto3" json:"public_token_keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Deprecated: Do not use.
	GatekeeperTokenKeys  *DamSecrets_GatekeeperTokenKeys `protobuf:"bytes,6,opt,name=gatekeeper_token_keys,json=gatekeeperTokenKeys,proto3" json:"gatekeeper_token_keys,omitempty"`                                                                             // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *DamSecrets) Reset()         { *m = DamSecrets{} }
func (m *DamSecrets) String() string { return proto.CompactTextString(m) }
func (*DamSecrets) ProtoMessage()    {}
func (*DamSecrets) Descriptor() ([]byte, []int) {
	return fileDescriptor_e301ca973d5091dc, []int{0}
}

func (m *DamSecrets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DamSecrets.Unmarshal(m, b)
}
func (m *DamSecrets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DamSecrets.Marshal(b, m, deterministic)
}
func (m *DamSecrets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DamSecrets.Merge(m, src)
}
func (m *DamSecrets) XXX_Size() int {
	return xxx_messageInfo_DamSecrets.Size(m)
}
func (m *DamSecrets) XXX_DiscardUnknown() {
	xxx_messageInfo_DamSecrets.DiscardUnknown(m)
}

var xxx_messageInfo_DamSecrets proto.InternalMessageInfo

func (m *DamSecrets) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DamSecrets) GetRevision() int64 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *DamSecrets) GetCommitTime() float64 {
	if m != nil {
		return m.CommitTime
	}
	return 0
}

func (m *DamSecrets) GetClientSecrets() map[string]string {
	if m != nil {
		return m.ClientSecrets
	}
	return nil
}

func (m *DamSecrets) GetBrokerSecrets() map[string]string {
	if m != nil {
		return m.BrokerSecrets
	}
	return nil
}

// Deprecated: Do not use.
func (m *DamSecrets) GetPublicTokenKeys() map[string]string {
	if m != nil {
		return m.PublicTokenKeys
	}
	return nil
}

// Deprecated: Do not use.
func (m *DamSecrets) GetGatekeeperTokenKeys() *DamSecrets_GatekeeperTokenKeys {
	if m != nil {
		return m.GatekeeperTokenKeys
	}
	return nil
}

type DamSecrets_GatekeeperTokenKeys struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PublicKey            string   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DamSecrets_GatekeeperTokenKeys) Reset()         { *m = DamSecrets_GatekeeperTokenKeys{} }
func (m *DamSecrets_GatekeeperTokenKeys) String() string { return proto.CompactTextString(m) }
func (*DamSecrets_GatekeeperTokenKeys) ProtoMessage()    {}
func (*DamSecrets_GatekeeperTokenKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_e301ca973d5091dc, []int{0, 3}
}

func (m *DamSecrets_GatekeeperTokenKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DamSecrets_GatekeeperTokenKeys.Unmarshal(m, b)
}
func (m *DamSecrets_GatekeeperTokenKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DamSecrets_GatekeeperTokenKeys.Marshal(b, m, deterministic)
}
func (m *DamSecrets_GatekeeperTokenKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DamSecrets_GatekeeperTokenKeys.Merge(m, src)
}
func (m *DamSecrets_GatekeeperTokenKeys) XXX_Size() int {
	return xxx_messageInfo_DamSecrets_GatekeeperTokenKeys.Size(m)
}
func (m *DamSecrets_GatekeeperTokenKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_DamSecrets_GatekeeperTokenKeys.DiscardUnknown(m)
}

var xxx_messageInfo_DamSecrets_GatekeeperTokenKeys proto.InternalMessageInfo

func (m *DamSecrets_GatekeeperTokenKeys) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *DamSecrets_GatekeeperTokenKeys) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func init() {
	proto.RegisterType((*DamSecrets)(nil), "dam.v1.DamSecrets")
	proto.RegisterMapType((map[string]string)(nil), "dam.v1.DamSecrets.BrokerSecretsEntry")
	proto.RegisterMapType((map[string]string)(nil), "dam.v1.DamSecrets.ClientSecretsEntry")
	proto.RegisterMapType((map[string]string)(nil), "dam.v1.DamSecrets.PublicTokenKeysEntry")
	proto.RegisterType((*DamSecrets_GatekeeperTokenKeys)(nil), "dam.v1.DamSecrets.GatekeeperTokenKeys")
}

func init() {
	proto.RegisterFile("proto/dam/v1/dam_secrets.proto", fileDescriptor_e301ca973d5091dc)
}

var fileDescriptor_e301ca973d5091dc = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x99, 0xd6, 0x76, 0xed, 0x2b, 0xfe, 0x9a, 0x5d, 0x21, 0x2c, 0xa8, 0x41, 0x50, 0x73,
	0x69, 0xc2, 0xae, 0x17, 0xf1, 0x24, 0x5d, 0x65, 0x0f, 0xf5, 0x50, 0xe2, 0x8a, 0xe0, 0xc1, 0x30,
	0x99, 0xbc, 0x6d, 0x87, 0x64, 0x3a, 0x61, 0x66, 0x1a, 0xc8, 0x5f, 0xea, 0xbf, 0x23, 0x99, 0x74,
	0xbb, 0x59, 0x1a, 0x0f, 0x3d, 0xb5, 0xdf, 0x1f, 0x7c, 0x78, 0x79, 0x2f, 0x81, 0xd7, 0xa5, 0x56,
	0x56, 0x45, 0x19, 0x93, 0x51, 0x75, 0xd1, 0xfc, 0x24, 0x06, 0xb9, 0x46, 0x6b, 0x42, 0x17, 0xd0,
	0x71, 0xc6, 0x64, 0x58, 0x5d, 0xbc, 0xfd, 0x3b, 0x02, 0xf8, 0xca, 0xe4, 0x8f, 0x36, 0xa4, 0x1e,
	0x9c, 0x54, 0xa8, 0x8d, 0x50, 0x1b, 0x8f, 0xf8, 0x24, 0x98, 0xc4, 0x77, 0x92, 0x9e, 0xc3, 0x63,
	0x8d, 0x95, 0x70, 0xd1, 0xc0, 0x27, 0xc1, 0x30, 0xde, 0x6b, 0xfa, 0x06, 0xa6, 0x5c, 0x49, 0x29,
	0x6c, 0x62, 0x85, 0x44, 0x6f, 0xe8, 0x93, 0x80, 0xc4, 0xd0, 0x5a, 0x37, 0x42, 0x22, 0xfd, 0x0e,
	0x4f, 0x79, 0x21, 0x70, 0x63, 0xef, 0xa6, 0xf0, 0x1e, 0xf9, 0xc3, 0x60, 0x7a, 0xf9, 0x2e, 0x6c,
	0xc7, 0x08, 0xef, 0x47, 0x08, 0xaf, 0x5c, 0x71, 0xa7, 0xbe, 0x6d, 0xac, 0xae, 0xe3, 0x27, 0xbc,
	0xeb, 0x35, 0xb4, 0x54, 0xab, 0x1c, 0xf5, 0x9e, 0x76, 0xf2, 0x5f, 0xda, 0xdc, 0x15, 0x1f, 0xd2,
	0xd2, 0xae, 0x47, 0x7f, 0xc1, 0x8b, 0x72, 0x9b, 0x16, 0x82, 0x27, 0x56, 0xe5, 0xb8, 0x49, 0x72,
	0xac, 0x8d, 0x37, 0x72, 0xc0, 0x0f, 0x3d, 0xc0, 0xa5, 0xeb, 0xde, 0x34, 0xd5, 0x05, 0xd6, 0x2d,
	0x72, 0x3e, 0xf0, 0x48, 0xfc, 0xac, 0x7c, 0x98, 0xd0, 0x3f, 0xf0, 0x72, 0xc5, 0x2c, 0xe6, 0x88,
	0x25, 0xea, 0x2e, 0x7c, 0xec, 0x93, 0x60, 0x7a, 0xf9, 0xbe, 0x07, 0x7e, 0xbd, 0xef, 0xef, 0x31,
	0x8e, 0x7d, 0xba, 0x3a, 0x0c, 0xce, 0xbf, 0x00, 0x3d, 0xdc, 0x15, 0x7d, 0x0e, 0xc3, 0x1c, 0xeb,
	0xdd, 0xf5, 0x9a, 0xbf, 0xf4, 0x0c, 0x46, 0x15, 0x2b, 0xb6, 0xe8, 0xce, 0x36, 0x89, 0x5b, 0xf1,
	0x79, 0xf0, 0x89, 0x34, 0x84, 0xc3, 0xfd, 0x1c, 0x45, 0x98, 0xc3, 0x59, 0xdf, 0x42, 0x8e, 0x62,
	0xfc, 0x84, 0xd3, 0x9e, 0xe7, 0x6e, 0x5e, 0xaa, 0x52, 0x8b, 0x8a, 0x59, 0x4c, 0xee, 0x51, 0xb0,
	0xb3, 0x16, 0x58, 0xd3, 0x57, 0x00, 0xbb, 0xc3, 0x35, 0x79, 0x8b, 0x9d, 0xb4, 0xce, 0x02, 0xeb,
	0x79, 0xfc, 0x7b, 0xb9, 0x12, 0x76, 0xbd, 0x4d, 0x43, 0xae, 0x64, 0x74, 0xad, 0xd4, 0xaa, 0xc0,
	0xab, 0x42, 0x6d, 0xb3, 0x65, 0xc1, 0xec, 0xad, 0xd2, 0x32, 0x5a, 0x23, 0x2b, 0xec, 0x9a, 0x33,
	0x8d, 0xb3, 0x5b, 0xcc, 0x50, 0x33, 0x8b, 0xd9, 0x8c, 0x71, 0x8e, 0xc6, 0xcc, 0x0c, 0xea, 0x4a,
	0x70, 0x34, 0x51, 0xf7, 0x3b, 0x4a, 0xc7, 0x4e, 0x7d, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x80,
	0x7e, 0xb5, 0xcd, 0x5e, 0x03, 0x00, 0x00,
}
